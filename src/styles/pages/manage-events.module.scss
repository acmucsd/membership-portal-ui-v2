@use 'src/styles/vars.scss' as vars;

.container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin: 0 auto;
  max-width: 60rem;

  .header {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    .viewControls {
      .active {
        cursor: pointer;
        fill: var(--theme-primary-4);
      }

      .inactive {
        cursor: pointer;
        fill: var(--theme-primary-1);
      }
    }
  }

  .controls {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: space-between;

    .controlsLeft {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 1rem;

      .createNewEvent {
        align-items: center;
        display: flex;
      }

      .searchBar {
        align-items: center;
        background: #fff;
        border: 2px solid var(--theme-primary-1);
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
        color: vars.$light-primary-2;
        display: flex;
        gap: 0.5rem;
        padding: 4px 0.5rem;

        .searchInput {
          background: #fff;
          border: 0;
          color: vars.$light-primary-2;
        }

        .searchInput::placeholder {
          color: vars.$light-primary-2;
        }
      }
    }

    .modeControls {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
    }
  }

  .pagination {
    align-items: center;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: space-between;

    .paginationSizeControl {
      align-items: center;
      display: flex;
      gap: 4px;

      .paginationSizeSelect {
        background-color: transparent;
        border: 0;
        cursor: pointer;
        font-size: 1rem;
      }
    }

    .paginationSwitcher {
      display: flex;
      gap: 1rem;

      .paginationSwitcherArrow {
        cursor: pointer;
        fill: currentColor;
      }

      .paginationSwitcherArrow[aria-disabled='true'] {
        cursor: auto;
        fill: vars.$disabled;
      }
    }
  }

  .eventCardContainer {
    display: grid;
    gap: 1rem 1rem;
    grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));
  }
}
