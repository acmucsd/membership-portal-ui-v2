@use 'src/styles/vars.scss' as vars;

.wrapper {
  display: flex;
  flex-direction: column;
  margin: 2rem -2rem;
  position: relative;
  z-index: 0;

  .hero {
    display: flex;
    gap: 12rem;
    height: calc(100vh - 10rem);
    margin: 0 auto;
    max-height: 56rem;
    max-width: 85rem;
    min-height: 36rem;
    padding: 0 2rem;
    padding-bottom: 9rem;
    width: 100%;

    @media screen and (max-width: vars.$breakpoint-lg) {
      align-items: center;
      flex-direction: column;
      gap: 0;
      height: unset;
      min-height: unset;
      padding-bottom: 0;
    }

    .left {
      align-items: center;
      display: flex;

      @media screen and (max-width: vars.$breakpoint-lg) {
        display: none;
      }

      .imageWrapper {
        flex: none;
        height: 26rem;
        margin: 1.5rem;
        position: relative;
        width: 26rem;
        z-index: 0;

        &::before,
        &::after {
          animation: pop 0.5s cubic-bezier(0.1, 2, 1, 1) forwards 0.2s;
          border: 2px solid currentColor;
          content: '';
          height: 100%;
          opacity: 0;
          position: absolute;
          width: 100%;
          z-index: -1;

          @keyframes pop {
            from {
              opacity: 1;
              transform: none;
            }

            to {
              opacity: 1;
              transform: var(--translation);
            }
          }
        }

        &::before {
          --translation: translate(-1.5rem, 1.5rem);
        }

        &::after {
          --translation: translate(1.5rem, -1.5rem);
        }

        img {
          clip-path: inset(0);
          object-fit: cover;
          transition: clip-path 0.2s cubic-bezier(0.5, 0, 1, 1);
        }

        &.loading {
          &::before,
          &::after {
            animation: none;
          }

          img {
            clip-path: inset(0% calc(100% - 0.5px) 0% 0%);
          }
        }
      }
    }

    .right {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      margin-left: auto;
      max-width: 34rem;

      @media screen and (max-width: vars.$breakpoint-lg) {
        margin: 0;
      }

      .deco1,
      .deco2 {
        flex: none;
        @media screen and (max-width: vars.$breakpoint-lg) {
          display: none;
        }
      }

      .deco1 path {
        animation: spin-in 0.5s backwards;
        transition: transform 1s;

        &:hover {
          transform: rotate(360deg);
        }

        @keyframes spin-in {
          from {
            transform: scale(0) rotate(-180deg);
          }

          to {
            transform: none;
          }
        }
      }

      .heroContent {
        align-items: flex-start;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;

        // Godly
        // https://stackoverflow.com/questions/48795143/css-text-with-gradient-and-gradient-outline
        .heading {
          color: #fff;
          font-size: 4rem;
          position: relative;
          z-index: 0;

          &::before {
            animation: shadow-in 1s both, rainbow-in 1.5s 0.2s both;
            background-clip: text;
            background-image: linear-gradient(
              90deg,
              var(--theme-background) 0%,
              var(--theme-background) 25%,
              #e981a0 50%,
              #f9a857 60%,
              #80ce1c 70%,
              #51c0c0 80%,
              #62b0ff 90%,
              #816dff 100%
            );
            color: transparent;
            content: 'The ACM Store';
            display: block;
            left: 0;
            margin: -10px;
            padding: 10px;
            position: absolute;
            -webkit-text-stroke: 7px transparent;
            top: 0;
            z-index: -1;

            @keyframes shadow-in {
              from {
                filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0.25));
              }

              to {
                filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.25));
              }
            }
            @keyframes rainbow-in {
              from {
                background-position: left;
                background-size: 400% 100%;
              }

              to {
                background-position: right;
                background-size: 200% 100%;
              }
            }
          }
        }

        .description {
          font-size: 1.375rem;
          line-height: 1.75rem;
        }

        .textButton {
          background: none;
          color: var(--theme-blue-text-button);
          font: inherit;
          padding: 0;
          text-align: left;

          &:hover {
            text-decoration: underline;
          }
        }
      }

      .deco2 {
        align-self: flex-end;
        margin-top: -2rem;

        > g {
          animation: pop-in 0.5s backwards;
          transition: transform 0.2s;

          &:hover {
            transform: scale(1.1) rotate(-15deg);
            transition-timing-function: cubic-bezier(0.1, 2, 1, 1);
          }

          @keyframes pop-in {
            from {
              opacity: 0;
              transform: translateY(10px) scale(0.5);
            }

            to {
              opacity: 1;
              transform: none;
            }
          }
        }
      }
    }
  }
}
