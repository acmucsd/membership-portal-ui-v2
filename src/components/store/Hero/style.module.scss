@use 'src/styles/vars.scss' as vars;

.heroWrapper {
  margin: 2rem -2rem;
  position: relative;
  z-index: 0;

  .hero {
    display: flex;
    gap: 14rem;
    height: calc(100vh - 10rem);
    margin: 0 auto;
    max-height: 56rem;
    max-width: 81rem;
    min-height: 36rem;
    padding: 0 2rem;
    padding-bottom: 9rem;

    @media (max-width: vars.$breakpoint-lg) {
      align-items: center;
      flex-direction: column;
      gap: 0;
      height: 30rem;
      min-height: unset;
    }

    .left {
      align-items: center;
      display: flex;

      @media (max-width: vars.$breakpoint-lg) {
        display: none;
      }

      .imageWrapper {
        flex: none;
        height: 26rem;
        margin: 1.5rem;
        position: relative;
        width: 26rem;
        z-index: 0;

        &::before,
        &::after {
          border: 2px solid currentColor;
          content: '';
          height: 100%;
          position: absolute;
          width: 100%;
          z-index: -1;
        }

        &::before {
          left: -1.5rem;
          top: 1.5rem;
        }

        &::after {
          left: 1.5rem;
          top: -1.5rem;
        }

        img {
          object-fit: cover;
        }
      }
    }

    .right {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      margin-left: auto;
      max-width: 36rem;

      @media (max-width: vars.$breakpoint-lg) {
        margin: 0;
      }

      .deco1,
      .deco2 {
        flex: none;
        @media (max-width: vars.$breakpoint-lg) {
          display: none;
        }
      }

      .heroContent {
        align-items: flex-start;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;

        // Godly
        // https://stackoverflow.com/questions/48795143/css-text-with-gradient-and-gradient-outline
        .heading {
          color: #fff;
          font-size: 4rem;
          position: relative;
          z-index: 0;

          &::before {
            background-clip: text;
            background-image: vars.$wobnaiw;
            color: transparent;
            content: 'The ACM Store';
            display: block;
            filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.25));
            left: 0;
            margin: -10px;
            padding: 10px;
            position: absolute;
            -webkit-text-stroke: 7px transparent;
            top: 0;
            z-index: -1;
          }
        }

        .description {
          font-size: 1.375rem;
          line-height: 1.75rem;
        }

        .textButton {
          background: none;
          color: var(--theme-primary-5);
          font: inherit;
          padding: 0;
          text-align: left;
        }
      }

      .deco2 {
        align-self: flex-end;
        margin-top: -2rem;
      }
    }
  }

  .rainbowWrapper {
    bottom: 0;
    display: flex;
    // The rainbow band sizes and spacing have a 13:7 ratio, which I'm
    // expressing in terms of the font size (em) since the rainbow itself has no
    // text. This makes it easier to resize the bands
    font-size: 2px;
    left: 0;
    overflow: hidden;
    position: absolute;
    right: 0;
    z-index: -1;

    @media (max-width: vars.$breakpoint-lg) {
      bottom: 1rem;
      font-size: 1px;
      transform: rotate(-12deg);
    }

    .teal {
      color: vars.$cyan-5;
    }

    .orange {
      color: vars.$orange-5;
    }

    .red {
      color: vars.$scarlet-4;
    }

    .pink {
      color: vars.$pink-4;
    }

    .barsLeft,
    .barsRight,
    .barsRest {
      display: flex;
      flex: auto;
      flex-direction: column;
      gap: 7em;
      width: 100vw;

      div {
        background-color: currentColor;
        height: 13em;
      }
    }

    .barsRight {
      align-self: flex-end;
    }

    // Has the same width as the main content so I can position the rainbow bend
    // part accordingly
    .rainbowContent {
      display: flex;
      // Shoves the rainbow bend off the screen a bit
      margin-left: -10rem;
      max-width: 81rem;
      width: 100%;

      @media (max-width: vars.$breakpoint-lg) {
        margin-left: 0;
        width: unset;
      }

      .rainbow {
        fill: none;
        flex: none;
        height: 273em;
        stroke: currentColor;
        stroke-width: 1.625rem;
        width: 394.5em;
      }

      .barsRest {
        align-self: flex-end;
        flex: auto;

        // Hide .barsRest so the bend can be centered on mobile
        @media (max-width: vars.$breakpoint-lg) {
          display: none;
        }
      }
    }
  }
}
